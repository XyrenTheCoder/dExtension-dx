// comment test and new line ignorant test

// import test
include('math')

// printing test
out(2 + 67)

// module test
out(math.cos(60))

// assign test
assign('a', "string")
assign('b', 10)
assign('c', 69.42)
assign('d', 2+4j)
assign('e', True)
assign('f', T)
assign('g', False)
assign('h', F)
assign('i', ('0', '1'))
assign('j', ['0', '1'])
assign('k', {'0', '1'})
//assign('_error', "error test")
//out(_error)
out(a, b, c, d, e, f, g, h, i, j, k)

// append test
assign('list', [])
append(list, 'test')
out(list)

// extend test
assign('list', [])
assign('tup1', ('0', '1', '2'))
assign('lis1', ['0', '1', '2'])
assign('dic1', {'0', '1', '2'})
extend(list, tup1)
extend(list, lis1)
extend(list, dic1)
out(list)

// getcwd test
out(getcwd())

// join test
assign('a', ['0', '1', '2'])
out(join(a, ''))

// argv test
//out(argv(1))

// getname test (os.name)
out(getname())

// getos test (full os name / linux distro name)
out(getos())

// getpyver test
out(getpyver())

// split test
assign('a', 'this is a test!string!btw')
out(split(a, ' ', 1))
out(split(a, '!', -1))

// count test
assign('a', [0, 1, 1])
out(count(a, 1))

// pop (list) test
assign('a', [0, 1, 2, 3])
lpop(a)
out(a)
lpop(a, 1)
out(a)

// pop (dict) test
assign('a', {'a':'0', 'b':'1', 'c':'2', 'd':'3'})
dpop(a, 'b')
out(a)

// pop (set) test
assign('a', {0, 1, 2})
spop(a)
out(a)